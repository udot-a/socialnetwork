{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","PureComponent","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","target","value","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","fullName","lookingForAJob","Preloader","Post","item","picture","message","LikeCounter","maxLength30","maxLengthCreator","minLength10","minLengthCreator","MyPosts","memo","count","postsElements","posts","reverse","map","p","key","likesCounter","console","log","postsBlock","onSubmit","values","addPost","newPostText","AddNewPostForm","handleSubmit","Field","component","Textarea","name","validate","required","reduxForm","form","MyPostsContainer","profilePage","postData","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.07216689.chunk.js","sourcesContent":["import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nlet mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth : state.auth.isAuth\n    };\n}\n\nexport const withAuthRedirect = (Component)=> {\n    class RedirectComponent extends React.Component{\n        render(){\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n    return ConnectedRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\n\nclass ProfileStatus extends React.PureComponent {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode =()=>{\n        this.setState({editMode:true})\n    }\n    deactivateEditMode =()=>{\n        this.setState({editMode:false})\n        this.props.updateStatus(this.state.status)\n    }\n    onStatusChange = (e) => this.setState({status: e.target.value})\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status !== this.props.status){\n            this.setState({status: this.props.status})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status||'---no status---'}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input autoFocus={true}\n                           onChange={this.onStatusChange}\n                           onBlur={this.deactivateEditMode}\n                           value={this.state.status}\n                    />\n                </div>\n                }\n\n            </div>\n        );\n\n    }\n};\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode =()=>{\n        setEditMode(true);\n    }\n    const deactivateEditMode =()=>{\n        setEditMode(false);\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => setStatus( e.target.value)\n\n    return (\n        <div>\n\n            {!editMode &&\n                <div>\n                <span\n                    onDoubleClick={activateEditMode}\n                >\n                    {props.status||'---no status---'}\n                </span>\n            </div>\n            }\n\n            {editMode &&\n            <div>\n                <input autoFocus={true}\n                       onChange={onStatusChange}\n                       onBlur={deactivateEditMode}\n                       value={status}\n                />\n            </div>\n            }\n\n        </div>\n    );\n\n};\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from './ProfileStatus'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profile){\n        return  <Preloader/>\n    }\n  return (\n    <div >\n      {/*<div>*/}\n      {/*  <img src='https://i.ytimg.com/vi/E0hnI4_egl8/maxresdefault.jpg' />*/}\n      {/*</div>*/}\n      <div className={s.descriptionBlock}>\n          <img src={props.profile.photos.large} alt=\"UserPhoto\"/>\n          <p>Меня зовут: {props.profile.fullName}</p>\n          <p>В настоящий момент я {props.profile.lookingForAJob?'ищу работу !!!':'работаю по специальности.'}</p>\n          <ProfileStatusWithHooks status={props.status} updateStatus = {props.updateStatus}/>\n        </div>\n    </div>\n  );\n};\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src={props.picture} />\n      {props.message}\n      <div>\n        <span>{props.LikeCounter} Like</span>\n      </div>\n    </div>\n  );\n};\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\n\nconst maxLength30 = maxLengthCreator(30)\nconst minLength10 = minLengthCreator(10)\n\n\nconst MyPosts = React.memo(props => {\n    let count = 0\n    let postsElements =\n        [...props.posts].reverse().map(p => (\n            <Post key={count++} message={p.message} picture={p.picture} LikeCounter={p.likesCounter}/>));\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n        values.newPostText = '';\n    }\nconsole.log('RENDER YO')\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div className={s.posts}>\n                {postsElements}\n                <AddNewPostForm onSubmit={onAddPost}/>\n            </div>\n        </div>\n    );\n});\n\nlet AddNewPostForm =(props)=>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name='newPostText'\n                       validate={[required, maxLength30, minLength10]} />\n            </div>\n            <div>\n                <button >New Post</button>\n            </div>\n        </form>\n\n    )\n}\nAddNewPostForm = reduxForm({form:'ProfileAddNewPostForm'})(AddNewPostForm)\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    };\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    };\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n};\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile = {this.props.profile}\n                     status={this.props.status}\n                     updateStatus = {this.props.updateStatus}\n            />\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) =>({\n    profile:state.profilePage.profile,\n    status:state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps,{\n        getUserProfile, getStatus, updateStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}